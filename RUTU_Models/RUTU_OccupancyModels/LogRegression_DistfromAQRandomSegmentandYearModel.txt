
           
           model {											#Open overall model bracket
           
           ############################################################
           #Priors
           ############################################################
           
           
           
           alpha.lam~dnorm(0,0.1)

           Beta_DistfromAQ~dnorm(0,0.1)

           # j segment random effect
           for (j in 1:Nsegment) {
           seg_rand[j]~dnorm(0,tau.seg) #random segment effect
           }
           
           # y year random effect
           for (y in 1:Nyear) {
           year_rand[y]~dnorm(0,tau.year) #random segment effect
           }
           
           #hyperprior on random segment effects precision
           tau.seg ~ dgamma(0.1,0.001)
           tau.year ~ dgamma(0.1,0.001)
           
           ############################################################
           #Likelihood specification
           ############################################################
           
           for (i in 1:N){											# Open i likelihood bracket; corresponds to obs
           #n observations
           
           rutu_occupancy[i] ~ dbern(p.occ[i]) 
           
           logit(p.occ[i]) <- alpha.lam + Beta_DistfromAQ*dist_from_AQ[i] + seg_rand[segment[i]] + year_rand[year[i]]
           
           # Fit assessments
           
           residual[i] <- abs(rutu_occupancy[i] - p.occ[i])
           
           
           # Generate replicate datasets
           NRUTU.new[i] ~ dbern(p.occ[i])
           residual.new[i] <- abs(NRUTU.new[i]-p.occ[i])
           
           
           } # close i likelihood bracket
           
           ############################################################
           #Derived quantities
           ############################################################
           # Add up discrepancy measures
           fit <- sum(residual[])
           fit.new <- sum(residual.new[])
           test <- step(fit.new-fit)
           bpvalue <- mean(test)
           } #close model
           
           
           
           
           
